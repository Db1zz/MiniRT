# TODO List

Scene parser -	DONE
Shapes - plane, sphere, cylinder
Shape resize - diameter for a
	sphere and the width and height for a cylinder.
Translation and rotation transformation to
objects, lights and cameras (except for spheres and lights that cannot be rotated).
Camera - DONE
Light sources 
Light management: spot brightness, hard shadows, ambiance lighting (objects are
never completely in the dark). You must implement Ambient and diffuse lighting.
Shape list - DONE

# BUGS
	Fixed sphere rendering when the sphere does not have a 0,0,0 position

RayTracing - https://scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work.html


## Scene parser

◦ Your program must take as a first argument a scene description file with the .rt
extension.
◦ Each type of element can be separated by one or more line break(s).
◦ Each type of information from an element can be separated by one or more
space(s).
◦ Each type of element can be set in any order in the file.
◦ Elements which are defined by a capital letter can only be declared once in
the scene. [A(Ambient lightning), C(Camera), L(Light), sp(Sphere), pl(Plane), cy(Cylinder)]
◦ Each element first’s information is the type identifier (composed by one or two
character(s)), followed by all specific information for each object in a strict
order.


## Allowed functions
open, close, read, write,
printf, malloc, free, perror,
strerror, exit
• All functions of the math
library (-lm man man 3 math)
• All functions of the MinilibX

## Light reflections
	We have two types of light[direct light, ambient lighting]
	It's better to set pixel color depending on if the ray which sent
	from normal point of hitting an object has any hit.
	If there's hit, we can make color brighter depending on envirnonment
	light.
	1. Send ray from the hitting point
	2. Set pixel color of an object if this ray hits object which is closest one.
	3. Sent shadowray and set brightness of the pixel depending on the result of shadowray.
